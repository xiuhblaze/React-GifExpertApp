{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","_ref","setCategories","_useState","useState","_useState2","Object","slicedToArray","inputValue","setInputValue","react_default","a","createElement","onSubmit","e","preventDefault","trim","length","c","concat","toConsumableArray","className","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","asyncToGenerator","regenerator_default","mark","_callee","category","url","resp","_yield$resp$json","data","gifs","wrap","_context","prev","next","encodeURI","fetch","sent","json","map","img","id","title","images","downsized_medium","abrupt","stop","_x","apply","this","arguments","GifGridItem","src","alt","GifGrid","_useFetchGifs","loading","state","setState","useEffect","then","imgs","useFetchGifs","Fragment","components_GifGridItem","assign","key","GifExpertApp","categories","CategoryAdd_CategoryAdd","GifGrid_GifGrid","ReactDOM","createRoot","document","getElementById","render","src_GifExpertApp"],"mappings":"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","file":"static/js/main.b82ee12b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }; // handleInputChange\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // Evita que se refresque la pantalla\r\n        \r\n        if (inputValue.trim().length > 2)\r\n        {\r\n            setCategories(c => [inputValue, ...c]);\r\n            setInputValue('');\r\n        }\r\n    }; // handleSubmit\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } className=\"card blur shadow-lg\">\r\n            <div className='card-body'>\r\n            <input className='form-control mb-2' type=\"text\" value={ inputValue } onChange={ handleInputChange } />\r\n            {/* <Button variant=\"primary\">Aceptar</Button> */}\r\n            </div>\r\n        </form>\r\n    )\r\n}; // CategoryAdd\r\n\r\nCategoryAdd.prototype = {\r\n    setCategories: PropTypes.func.isRequired // solo decir que es una funcion lo que debe de recibir\r\n};\r\n\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=dWAoKN2ZhJ1R4CyimnQOIjhGvBO4gJ0C`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    //setImages(gifs);\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url}) => {\r\n  return (\r\n    <div className='col-4 mb-2'>\r\n        <div className=\"card\">\r\n            <img src={ url } alt={ title } title={ title } className=\"card-img-top\" />\r\n            <div className='card-body'>\r\n                <p className='card-text'>{ title }</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            { loading && <p>Cargando...</p>}\r\n            <div className=\"row\">\r\n                {\r\n                    data.map(img => (<GifGridItem key={ img.id } { ...img } />))\r\n                    // images.map(i => (<GifGridItem key={ i.id } img={ i } />))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState ({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs => { \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                }) \r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n};","import React, { useState } from 'react';\r\nimport { CategoryAdd } from './components/CategoryAdd';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <CategoryAdd setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            {/* <button type=\"button\" onClick={ handleAdd }>Agregar</button> */}\r\n            <div>\r\n                {\r\n                    categories.map(c => (\r\n                        <GifGrid key={ c } category={ c } />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport GifExpertApp from './GifExpertApp';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <GifExpertApp />\n);\n"],"sourceRoot":""}